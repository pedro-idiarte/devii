# Generated by Django 5.1.7 on 2025-03-12 00:32

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('STUDENT', 'Estudante'), ('COORDINATOR', 'Coordenador'), ('CRE', 'CRE'), ('ADMIN', 'Administrador')], max_length=20)),
                ('registration_number', models.CharField(blank=True, max_length=20, null=True)),
                ('google_id', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AbsenceExemption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pendente'), ('COORDINATOR_ANALYSIS', 'Em análise pelo Coordenador'), ('CRE_ANALYSIS', 'Em análise pelo CRE'), ('APPROVED', 'Aprovado'), ('REJECTED', 'Rejeitado')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('coordinator_notes', models.TextField(blank=True, null=True)),
                ('cre_notes', models.TextField(blank=True, null=True)),
                ('subject', models.CharField(max_length=100)),
                ('absence_date', models.DateField()),
                ('reason', models.TextField()),
                ('requires_second_call', models.BooleanField(default=False)),
                ('supporting_documents', models.FileField(upload_to='documents/absence/')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='absence_exemptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ComplementaryActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pendente'), ('COORDINATOR_ANALYSIS', 'Em análise pelo Coordenador'), ('CRE_ANALYSIS', 'Em análise pelo CRE'), ('APPROVED', 'Aprovado'), ('REJECTED', 'Rejeitado')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('coordinator_notes', models.TextField(blank=True, null=True)),
                ('cre_notes', models.TextField(blank=True, null=True)),
                ('activity_type', models.CharField(max_length=100)),
                ('hours', models.IntegerField()),
                ('certificate', models.FileField(upload_to='documents/complementary/')),
                ('activity_date', models.DateField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complementary_activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CurricularComponentSuspension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pendente'), ('COORDINATOR_ANALYSIS', 'Em análise pelo Coordenador'), ('CRE_ANALYSIS', 'Em análise pelo CRE'), ('APPROVED', 'Aprovado'), ('REJECTED', 'Rejeitado')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('coordinator_notes', models.TextField(blank=True, null=True)),
                ('cre_notes', models.TextField(blank=True, null=True)),
                ('component_name', models.CharField(max_length=100)),
                ('reason', models.TextField()),
                ('semester', models.CharField(max_length=20)),
                ('supporting_documents', models.FileField(upload_to='documents/component_suspension/')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='component_suspensions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HighSchoolCertification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pendente'), ('COORDINATOR_ANALYSIS', 'Em análise pelo Coordenador'), ('CRE_ANALYSIS', 'Em análise pelo CRE'), ('APPROVED', 'Aprovado'), ('REJECTED', 'Rejeitado')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('coordinator_notes', models.TextField(blank=True, null=True)),
                ('cre_notes', models.TextField(blank=True, null=True)),
                ('certification_type', models.CharField(choices=[('ENCCEJA', 'ENCCEJA'), ('ENEM', 'ENEM')], max_length=20)),
                ('year', models.IntegerField()),
                ('proof_document', models.FileField(upload_to='documents/certification/')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='high_school_certifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HomeExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pendente'), ('COORDINATOR_ANALYSIS', 'Em análise pelo Coordenador'), ('CRE_ANALYSIS', 'Em análise pelo CRE'), ('APPROVED', 'Aprovado'), ('REJECTED', 'Rejeitado')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('coordinator_notes', models.TextField(blank=True, null=True)),
                ('cre_notes', models.TextField(blank=True, null=True)),
                ('reason', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('medical_report', models.FileField(upload_to='documents/home_exercise/')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_exercises', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PhysicalEducationExemption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pendente'), ('COORDINATOR_ANALYSIS', 'Em análise pelo Coordenador'), ('CRE_ANALYSIS', 'Em análise pelo CRE'), ('APPROVED', 'Aprovado'), ('REJECTED', 'Rejeitado')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('coordinator_notes', models.TextField(blank=True, null=True)),
                ('cre_notes', models.TextField(blank=True, null=True)),
                ('reason', models.TextField()),
                ('medical_report', models.FileField(upload_to='documents/pe_exemption/')),
                ('validity_period', models.CharField(max_length=50)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pe_exemptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegistrationSuspension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pendente'), ('COORDINATOR_ANALYSIS', 'Em análise pelo Coordenador'), ('CRE_ANALYSIS', 'Em análise pelo CRE'), ('APPROVED', 'Aprovado'), ('REJECTED', 'Rejeitado')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('coordinator_notes', models.TextField(blank=True, null=True)),
                ('cre_notes', models.TextField(blank=True, null=True)),
                ('reason', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('supporting_documents', models.FileField(upload_to='documents/suspension/')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registration_suspensions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WithdrawalTerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pendente'), ('COORDINATOR_ANALYSIS', 'Em análise pelo Coordenador'), ('CRE_ANALYSIS', 'Em análise pelo CRE'), ('APPROVED', 'Aprovado'), ('REJECTED', 'Rejeitado')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('coordinator_notes', models.TextField(blank=True, null=True)),
                ('cre_notes', models.TextField(blank=True, null=True)),
                ('reason', models.TextField()),
                ('withdrawal_date', models.DateField()),
                ('supporting_documents', models.FileField(upload_to='documents/withdrawal/')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawal_terms', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
